name: docker

permissions:
  contents: read
  packages: write

on:
  push:
    branches: [ "master" ]
    tags: [ v* ]

jobs:
  verify-configs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Compare config files
        run: |
          declare -A FILES_TO_CHECK=(
            ["chiado.yaml"]="https://raw.githubusercontent.com/gnosischain/configs/main/chiado/config.yaml"
            ["gnosis.yaml"]="https://raw.githubusercontent.com/gnosischain/configs/main/mainnet/config.yaml"
            ["holesky.yaml"]="https://raw.githubusercontent.com/eth-clients/holesky/main/metadata/config.yaml"
            ["hoodi.yaml"]="https://raw.githubusercontent.com/eth-clients/hoodi/main/metadata/config.yaml"
            ["mainnet.yaml"]="https://raw.githubusercontent.com/eth-clients/mainnet/main/metadata/config.yaml"
          )

          for LOCAL_FILE in "${!FILES_TO_CHECK[@]}"; do
            REMOTE_URL="${FILES_TO_CHECK[$LOCAL_FILE]}"
            wget -q -O "/tmp/${LOCAL_FILE}" "${REMOTE_URL}"

            if ! cmp -s "/tmp/${LOCAL_FILE}" "src/spec/configs/${LOCAL_FILE}"; then
              echo "Mismatch detected in ${LOCAL_FILE}!"
              echo "----- DIFF -----"
              diff -u "src/spec/configs/${LOCAL_FILE}" "/tmp/${LOCAL_FILE}" || true
              echo "----------------"
              echo "Please update src/spec/configs/${LOCAL_FILE} to match upstream."
              exit 1
            else
              echo "${LOCAL_FILE} is up-to-date."
            fi
          done

  build-and-push:
    # This depends on the verify-configs job above
    needs: verify-configs

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker metadata
      id: docker_metadata
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.repository_owner }}/vero
        tags: |
          type=ref,event=branch
          type=ref,event=tag

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        build-args: |
          GIT_TAG=${{ github.ref_name }}
          GIT_COMMIT=${{ github.sha }}
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker_metadata.outputs.tags }}
        labels: ${{ steps.docker_metadata.outputs.labels }}
